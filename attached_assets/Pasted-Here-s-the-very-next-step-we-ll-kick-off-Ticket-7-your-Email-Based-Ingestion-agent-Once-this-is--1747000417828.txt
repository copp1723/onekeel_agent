Here‚Äôs the very next step: we‚Äôll kick off Ticket‚ÄØ#7, your Email‚ÄëBased Ingestion agent. Once this is in review, we‚Äôll move on to Ticket‚ÄØ#8 (hybrid fallback).

‚∏ª

üéü Ticket‚ÄØ#7: Implement ingestScheduledReport.ts (IMAP Email Ingestion)

Context
AgentFlow needs to first attempt pulling CRM reports via scheduled emails (e.g. from no-reply@vinsolutions.com) before falling back to browser automation. This service will connect to a mailbox, look for new attachments, save them, and hand back the file path.

‚∏ª

üìã Requirements
	1.	IMAP Connection
	‚Ä¢	Use imap-simple (or similar) with credentials from envVars:
	‚Ä¢	EMAIL_HOST, EMAIL_PORT, EMAIL_USER, EMAIL_PASS, EMAIL_TLS
	‚Ä¢	Poll the inbox folder (e.g. INBOX) for unread messages from the configured sender.
	2.	Attachment Extraction
	‚Ä¢	For each matching message, download all attachments.
	‚Ä¢	Save attachments to envVars.DOWNLOAD_DIR (create if needed).
	‚Ä¢	Name files uniquely, e.g. ${platform}_${timestamp}_${originalFilename}.
	3.	Message Handling
	‚Ä¢	Mark processed messages as read (or move to a ‚Äúprocessed‚Äù folder).
	‚Ä¢	If no new messages found, return null or throw a specific ‚Äúno report‚Äù error to trigger fallback.
	4.	Return Value
	‚Ä¢	On success: return the first file path found as a string.
	‚Ä¢	On no reports: throw ReportNotFoundError (or return null if preferred).
	‚Ä¢	On fatal email errors: throw with clear message.
	5.	Logging & Errors
	‚Ä¢	Use shared logger (log.info, log.error) to record:
	‚Ä¢	Connection success/failure
	‚Ä¢	Number of messages scanned
	‚Ä¢	File paths saved
	‚Ä¢	Wrap IMAP calls in try/catch and propagate errors cleanly.
	6.	Typing & Tests
	‚Ä¢	Fully type the function as

export async function ingestScheduledReport(
  platform: string,
  downloadDir: string
): Promise<string | null> { ‚Ä¶ }


	‚Ä¢	Add unit tests (mocking imap-simple) to cover:
	‚Ä¢	No messages found
	‚Ä¢	Single message with one attachment
	‚Ä¢	Multiple messages & attachments

‚∏ª

‚úÖ Acceptance Criteria
	‚Ä¢	ingestScheduledReport.ts compiles under strict TS with zero errors.
	‚Ä¢	Connects to IMAP, finds messages from configured sender.
	‚Ä¢	Downloads attachments to DOWNLOAD_DIR.
	‚Ä¢	Returns correct file path or throws ReportNotFoundError.
	‚Ä¢	Fully covered by unit tests with ‚â•‚ÄØ80% coverage.
	‚Ä¢	Integrated into CI (tsc + tests pass).

‚∏ª

üë§ Assignees & Labels
	‚Ä¢	Assignees: AgentFlow Dev Team
	‚Ä¢	Labels: feature, typescript, CRM-ingestion, critical

‚∏ª

Once Ticket‚ÄØ#7 is underway, we‚Äôll draft Ticket‚ÄØ#8 for the hybrid logic (email-first, fallback to runFlow). Let me know if you‚Äôd like any adjustments here; otherwise, you can copy this into your tracker and get coding!